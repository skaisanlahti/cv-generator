{"version":3,"sources":["components/FormField.js","components/Information.js","components/Education.js","components/Experience.js","components/SubmitButton.js","components/FunctionButton.js","App.js","index.js"],"names":["FormField","props","state","value","handleChange","bind","event","target","name","this","setState","isSubmitted","type","fieldType","placeholder","onChange","Component","Information","className","Education","Experience","SubmitButton","onClick","handleSubmit","FunctionButton","color","handleClick","text","App","educationFields","experienceFields","addEducationField","addExperienceField","removeEducationField","removeExperienceField","schools","work","i","push","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d21938e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass FormField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isSubmitted) {\r\n      return <p>{this.state.value}</p>;\r\n    } else {\r\n      return (\r\n        <input\r\n          type={this.props.fieldType}\r\n          name=\"value\"\r\n          placeholder={this.props.placeholder}\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default FormField;\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst Information = (props) => {\r\n  return (\r\n    <div className=\"form-grid\">\r\n      <FormField\r\n        placeholder=\"First Name\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField\r\n        placeholder=\"Last Name\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField\r\n        placeholder=\"Email\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField\r\n        placeholder=\"Phone\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst Education = (props) => {\r\n  return (\r\n    <div className=\"form-grid\">\r\n      <FormField\r\n        placeholder=\"School\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField\r\n        placeholder=\"Diploma\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField fieldType=\"date\" isSubmitted={props.isSubmitted} />\r\n      <FormField fieldType=\"date\" isSubmitted={props.isSubmitted} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst Experience = (props) => {\r\n  return (\r\n    <div className=\"form-grid\">\r\n      <FormField\r\n        placeholder=\"Company\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField\r\n        placeholder=\"Title\"\r\n        fieldType=\"text\"\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n      <FormField fieldType=\"date\" isSubmitted={props.isSubmitted} />\r\n      <FormField fieldType=\"date\" isSubmitted={props.isSubmitted} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\n\r\nfunction SubmitButton(props) {\r\n  if (props.isSubmitted) {\r\n    return (\r\n      <button className=\"submit-button red\" onClick={props.handleSubmit}>\r\n        Edit Form\r\n      </button>\r\n    );\r\n  }\r\n  return (\r\n    <button className=\"submit-button green\" onClick={props.handleSubmit}>\r\n      Submit Form\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\n\r\nfunction FunctionButton(props) {\r\n  if (!props.isSubmitted) {\r\n    return (\r\n      <button className={props.color} onClick={props.handleClick}>\r\n        {props.text}\r\n      </button>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default FunctionButton;\r\n","import React, { Component } from \"react\";\nimport Information from \"./components/Information\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport SubmitButton from \"./components/SubmitButton\";\nimport FunctionButton from \"./components/FunctionButton\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isSubmitted: false,\n      educationFields: 1,\n      experienceFields: 1,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addEducationField = this.addEducationField.bind(this);\n    this.addExperienceField = this.addExperienceField.bind(this);\n    this.removeEducationField = this.removeEducationField.bind(this);\n    this.removeExperienceField = this.removeExperienceField.bind(this);\n  }\n\n  handleSubmit() {\n    const { isSubmitted } = this.state;\n    this.setState({\n      isSubmitted: !isSubmitted,\n    });\n  }\n\n  addEducationField() {\n    this.setState({\n      educationFields: this.state.educationFields + 1,\n    });\n  }\n\n  addExperienceField() {\n    this.setState({\n      experienceFields: this.state.experienceFields + 1,\n    });\n  }\n\n  removeEducationField() {\n    if (this.state.educationFields > 0) {\n      this.setState({\n        educationFields: this.state.educationFields - 1,\n      });\n    }\n  }\n\n  removeExperienceField() {\n    if (this.state.experienceFields > 0) {\n      this.setState({\n        experienceFields: this.state.experienceFields - 1,\n      });\n    }\n  }\n\n  render() {\n    const schools = [];\n    const work = [];\n    for (let i = 0; i < this.state.educationFields; i++) {\n      schools.push(<Education key={i} isSubmitted={this.state.isSubmitted} />);\n    }\n    for (let i = 0; i < this.state.experienceFields; i++) {\n      work.push(<Experience key={i} isSubmitted={this.state.isSubmitted} />);\n    }\n    return (\n      <div className=\"app\">\n        <h1>CV Generator</h1>\n        <h2>Personal Information</h2>\n        <Information isSubmitted={this.state.isSubmitted} />\n        <h2>Education</h2>\n        {schools}\n        <div className=\"button-container\">\n          <FunctionButton\n            text=\"Add School\"\n            color=\"blue\"\n            handleClick={this.addEducationField}\n            isSubmitted={this.state.isSubmitted}\n          />\n          <FunctionButton\n            text=\"Remove School\"\n            color=\"gray\"\n            handleClick={this.removeEducationField}\n            isSubmitted={this.state.isSubmitted}\n          />\n        </div>\n        <h2>Experience</h2>\n        {work}\n        <div className=\"button-container\">\n          <FunctionButton\n            text=\"Add Work\"\n            color=\"blue\"\n            handleClick={this.addExperienceField}\n            isSubmitted={this.state.isSubmitted}\n          />\n          <FunctionButton\n            text=\"Remove Work\"\n            color=\"gray\"\n            handleClick={this.removeExperienceField}\n            isSubmitted={this.state.isSubmitted}\n          />\n        </div>\n        <SubmitButton\n          isSubmitted={this.state.isSubmitted}\n          handleSubmit={this.handleSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./reset.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}